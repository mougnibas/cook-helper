<?xml version="1.0" encoding="UTF-8"?>
<!-- Â© Copyright 2017-2018 Yoann MOUGNIBAS -->

<!-- This file is part of Cook-Helper. -->

<!-- Cook-Helper is free software: you can redistribute it and/or modify -->
<!-- it under the terms of the GNU General Public License as published by -->
<!-- the Free Software Foundation, either version 3 of the License, or -->
<!-- (at your option) any later version. -->

<!-- Cook-Helper is distributed in the hope that it will be useful, -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the -->
<!-- GNU General Public License for more details. -->

<!-- You should have received a copy of the GNU General Public License -->
<!-- along with Cook-Helper. If not, see <http://www.gnu.org/licenses/> -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0           http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- Parent project, to get common stuff -->
	<parent>
		<groupId>fr.mougnibas.base-maven</groupId>
		<artifactId>base-maven</artifactId>
		<version>1.0.0</version>
	</parent>

	<!-- Project ID -->
	<groupId>fr.mougnibas.cook-helper</groupId>
	<artifactId>cook-helper</artifactId>
	<version>1.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<!-- Childs -->
	<modules>
		<module>recipe</module>
		<module>shoplist</module>
		<module>util</module>
	</modules>

	<!-- General informations -->
	<name>Cook helper project</name>
	<description>A tool to help to cook using a "cook processor".</description>
	<inceptionYear>2017</inceptionYear>

	<scm>
		<connection>scm:git:https://github.com/mougnibas/cook-helper.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:mougnibas/cook-helper.git</developerConnection>
	</scm>

	<url>http://cook-helper.mougnibas.fr/</url>

	<distributionManagement>
		<downloadUrl>http://cook-helper.mougnibas.fr/download</downloadUrl>
		<site>
			<id>website.mougnibas</id>
			<name>mougnibas website</name>
			<url>scp://cook-helper.mougnibas.fr/var/www/html</url>
		</site>
	</distributionManagement>

	<properties>

		<!-- 1.8 source, for 1.8 JRE -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- File encoding is UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Don't deploy maven artifact -->
		<maven.deploy.skip>true</maven.deploy.skip>

		<!-- Wildfly version to use in integration-tests -->
		<version.wildfly>11.0.0.Final</version.wildfly>
		<version.wildfly-swarm>2017.12.1</version.wildfly-swarm>

		<!-- Don't display the repository locations of the dependencies -->
		<!-- (to speed up the build) -->
		<dependency.locations.enabled>false</dependency.locations.enabled>

		<!-- ======================== -->
		<!-- Checkstyle configuration -->
		<!-- ======================== -->

		<!-- Use this predefined ruleset -->
		<checkstyle.config.location>google_checks.xml</checkstyle.config.location>

		<!-- The lowest severity level that is considered a violation -->
		<checkstyle.violationSeverity>info</checkstyle.violationSeverity>
		
		<!-- SonarQube configuration -->
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.organization>mougnibas-github</sonar.organization>

	</properties>

	<profiles>
		<profile>
			<!-- =========================================== -->
			<!-- Common configuration profile -->
			<!-- Activated by default. -->
			<!-- =========================================== -->
			<id>common-configuration</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- Java EE 8 still use EJB v3.2 -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-ejb-plugin</artifactId>
						<configuration>
							<ejbVersion>3.2</ejbVersion>
						</configuration>
					</plugin>
					<plugin>
						<!-- Package web classes into a jar -->
						<!-- and don't fail if web.xml is missing -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<archiveClasses>true</archiveClasses>
							<failOnMissingWebXml>false</failOnMissingWebXml>
						</configuration>
					</plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<!-- Third party plugins -->
						<plugin>
							<!-- https://dmp.fabric8.io/ -->
							<groupId>io.fabric8</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>0.23.0</version>
						</plugin>
						<plugin>
							<!-- https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Maven -->
							<groupId>org.sonarsource.scanner.maven</groupId>
							<artifactId>sonar-maven-plugin</artifactId>
							<version>3.4.0.905</version>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>javax</groupId>
						<artifactId>javaee-web-api</artifactId>
						<version>8.0</version>
					</dependency>
					<dependency>
						<groupId>org.wildfly.swarm</groupId>
						<artifactId>bom</artifactId>
						<version>${version.wildfly-swarm}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
		</profile>
		<profile>
			<!-- =========================================== -->
			<!-- Common test configuration -->
			<!-- Activated by default. -->
			<!-- =========================================== -->
			<id>common-test-configuration</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
						<version>4.12</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.jboss.arquillian</groupId>
						<artifactId>arquillian-bom</artifactId>
						<version>1.1.13.Final</version>
						<scope>test</scope>
						<type>pom</type>
					</dependency>
					<dependency>
						<groupId>org.jboss.arquillian.junit</groupId>
						<artifactId>arquillian-junit-container</artifactId>
						<version>1.1.11.Final</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.wildfly.arquillian</groupId>
						<artifactId>wildfly-arquillian-container-managed</artifactId>
						<version>2.1.0.Final</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.jboss.shrinkwrap.resolver</groupId>
						<artifactId>shrinkwrap-resolver-depchain</artifactId>
						<version>2.2.6</version>
						<type>pom</type>
						<scope>test</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.wildfly.plugins</groupId>
							<artifactId>wildfly-maven-plugin</artifactId>
							<version>1.2.1.Final</version>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<!-- =========================================== -->
			<!-- Packaging profile (make optional artifacts) -->
			<!-- NOT activated by default. -->
			<!-- =========================================== -->
			<id>advanced-packaging</id>
			<activation>
				<property>
					<name>full</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- Package javadoc into a jar -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>jar</goal>
									<goal>aggregate-jar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<quiet>true</quiet>
						</configuration>
					</plugin>
					<plugin>
						<!-- Package source into a jar -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- Package project into an archive -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<inherited>false</inherited>
						<executions>
							<execution>
								<goals>
									<goal>single</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
						<configuration>
							<descriptors>
								<descriptor>
									${project.basedir}/src/main/assembly/project-assembly-polichouz.xml
								</descriptor>
							</descriptors>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- =========================================== -->
			<!-- Check / Verification profile -->
			<!-- Activated by default. -->
			<!-- =========================================== -->
			<id>check</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- Use google checkstyle rule -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<includeTestSourceDirectory>true</includeTestSourceDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- Run JDeps checks -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jdeps-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>jdkinternals</goal>
									<goal>test-jdkinternals</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- Enforce requirements. Can be debate. -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>enforce</goal>
								</goals>
								<phase>validate</phase>
								<configuration>
									<rules>
										<requireMavenVersion>
											<version>[3.5.2]</version>
										</requireMavenVersion>
										<requireJavaVersion>
											<version>[1.8.0-0,]</version>
										</requireJavaVersion>
										<requireOS>
											<name>windows 10</name>
											<version>10.0</version>
											<family>windows</family>
											<arch>amd64</arch>
										</requireOS>
										<reactorModuleConvergence />
										<requireEnvironmentVariable>
											<variableName>DOCKER_HOST</variableName>
										</requireEnvironmentVariable>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- =========================================== -->
			<!-- Site profile -->
			<!-- Activated by default. -->
			<!-- =========================================== -->
			<id>site</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- Multi-module site don't work well. -->
						<!-- Use 'stage' to make a working one. -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>stage</goal>
								</goals>
								<phase>site</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
						<reportSets>
							<reportSet>
								<reports>
									<!-- All reports, except dependency-management -->
									<report>cim</report>
									<report>dependencies</report>
									<report>dependency-convergence</report>
									<report>dependency-info</report>
									<!-- This one takes ages to end. Disabled! -->
									<!-- <report>dependency-management</report> -->
									<report>distribution-management</report>
									<report>index</report>
									<report>issue-tracking</report>
									<report>license</report>
									<report>mailing-list</report>
									<report>modules</report>
									<report>plugin-management</report>
									<report>plugins</report>
									<report>project-team</report>
									<report>scm</report>
									<report>summary</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changelog-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<configuration>
							<aggregate>true</aggregate>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<quiet>true</quiet>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<reportSets>
							<reportSet>
								<reports>
									<report>pmd</report>
								</reports>
							</reportSet>
							<reportSet>
								<reports>
									<report>cpd</report>
								</reports>
							</reportSet>
						</reportSets>
						<configuration>
							<aggregate>true</aggregate>
							<skipEmptyReport>false</skipEmptyReport>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>

</project>
